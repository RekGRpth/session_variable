/*
 * Copyright (c) Splendid Data Product Development B.V. 2013
 *
 * This program is free software: You may redistribute and/or modify under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at Client's option) any
 * later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program.  If not, Client should obtain one via www.gnu.org/licenses/.
 */
-- init
create schema schema_1;
create extension session_variable version '2.0';
select session_variable.init();
 init 
------
    0
(1 row)

create type schema_1.my_type as 
( text_field text
, int_field int
);
create domain schema_1.my_domain as schema_1.my_type[];
select session_variable.create_variable('schema_1.my_var', 'schema_1.my_type'::regtype, '("some text", 2)'::schema_1.my_type);
 create_variable 
-----------------
 t
(1 row)

select session_variable.create_variable('schema_1.my_var[]', 'schema_1.my_type[]'::regtype, array['("element1", 1)'::schema_1.my_type,'("element2", 2)'::schema_1.my_type]);
 create_variable 
-----------------
 t
(1 row)

select session_variable.create_variable('initially null', 'schema_1.my_type'::regtype);
 create_variable 
-----------------
 t
(1 row)

select session_variable.create_variable('schema_1.my_domain', 'schema_1.my_domain'::regtype, array['("element 1", 123)'::schema_1.my_type,'("element 2,2", 234)'::schema_1.my_type]::schema_1.my_domain);
 create_variable 
-----------------
 t
(1 row)

select session_variable.create_variable('int[]', 'int[]'::regtype, array[[1,2],[3,4],[5,5]]);
 create_variable 
-----------------
 t
(1 row)

select session_variable.create_variable('just_text', 'text'::regtype, 'just some text'::text);
 create_variable 
-----------------
 t
(1 row)

select session_variable.create_variable('just_int', 'int'::regtype, 0);
 create_variable 
-----------------
 t
(1 row)

select session_variable.create_variable('just_smallint', 'smallint'::regtype, 123);
 create_variable 
-----------------
 t
(1 row)

select session_variable.create_constant('const_boolean', 'boolean'::regtype, true);
 create_constant 
-----------------
 t
(1 row)

select session_variable.get('schema_1.my_var', null::schema_1.my_type);
       get       
-----------------
 ("some text",2)
(1 row)

select session_variable.get('schema_1.my_var[]', null::schema_1.my_type[]);
               get               
---------------------------------
 {"(element1,1)","(element2,2)"}
(1 row)

select session_variable.get('initially null', null::schema_1.my_type);
 get 
-----
 
(1 row)

select session_variable.get('schema_1.my_domain', null::schema_1.my_domain);
                       get                       
-------------------------------------------------
 {"(\"element 1\",123)","(\"element 2,2\",234)"}
(1 row)

select session_variable.get('int[]', null::int[]);
         get         
---------------------
 {{1,2},{3,4},{5,5}}
(1 row)

select session_variable.get('just_text', null::varchar);
      get       
----------------
 just some text
(1 row)

select session_variable.get('just_int', 15);
 get 
-----
   0
(1 row)

select session_variable.get('just_smallint', null::smallint);
 get 
-----
 123
(1 row)

select session_variable.get('const_boolean', null::boolean);
 get 
-----
 t
(1 row)

select session_variable.get_stable('const_boolean', null::boolean);           -- should fail as version 2.0 does not have function get_stable()  
ERROR:  function session_variable.get_stable(unknown, boolean) does not exist
LINE 1: select session_variable.get_stable('const_boolean', null::bo...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select session_variable.get_constant('const_boolean', null::boolean);         -- should fail as version 2.0 does not have function get_constant()
ERROR:  function session_variable.get_constant(unknown, boolean) does not exist
LINE 1: select session_variable.get_constant('const_boolean', null::...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select session_variable.init();
 init 
------
    9
(1 row)

select session_variable.get('schema_1.my_var', null::schema_1.my_type);
       get       
-----------------
 ("some text",2)
(1 row)

select session_variable.get('schema_1.my_var[]', null::schema_1.my_type[]);
               get               
---------------------------------
 {"(element1,1)","(element2,2)"}
(1 row)

select session_variable.get('initially null', null::schema_1.my_type);
 get 
-----
 
(1 row)

select session_variable.get('schema_1.my_domain', null::schema_1.my_domain);
                       get                       
-------------------------------------------------
 {"(\"element 1\",123)","(\"element 2,2\",234)"}
(1 row)

select session_variable.get('int[]', null::int[]);
         get         
---------------------
 {{1,2},{3,4},{5,5}}
(1 row)

select session_variable.get('just_text', null::varchar);
      get       
----------------
 just some text
(1 row)

select session_variable.get('just_int', 15);
 get 
-----
   0
(1 row)

select session_variable.get('just_smallint', null::smallint);
 get 
-----
 123
(1 row)

select session_variable.set('int[]', array[1,2,3]);
 set 
-----
 t
(1 row)

select session_variable.dump();
                                                                                   dump                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 truncate table session_variable.variables;
 select session_variable.init();
 select session_variable.create_constant('const_boolean', 'pg_catalog.bool'::regtype, 't'::pg_catalog.bool);
 select session_variable.create_variable('initially null', 'schema_1.my_type'::regtype, NULL::schema_1.my_type);
 select session_variable.create_variable('int[]', 'pg_catalog.int4[]'::regtype, '{{1,2},{3,4},{5,5}}'::pg_catalog.int4[]);
 select session_variable.create_variable('just_int', 'pg_catalog.int4'::regtype, '0'::pg_catalog.int4);
 select session_variable.create_variable('just_smallint', 'pg_catalog.int2'::regtype, '123'::pg_catalog.int2);
 select session_variable.create_variable('just_text', 'pg_catalog.text'::regtype, 'just some text'::pg_catalog.text);
 select session_variable.create_variable('schema_1.my_domain', 'schema_1.my_domain'::regtype, E'{"(\\"element 1\\",123)","(\\"element 2,2\\",234)"}'::schema_1.my_domain);
 select session_variable.create_variable('schema_1.my_var', 'schema_1.my_type'::regtype, '("some text",2)'::schema_1.my_type);
 select session_variable.create_variable('schema_1.my_var[]', 'schema_1.my_type[]'::regtype, '{"(element1,1)","(element2,2)"}'::schema_1.my_type[]);
(11 rows)

alter extension session_variable update;
select session_variable.get('schema_1.my_var', null::schema_1.my_type);
       get       
-----------------
 ("some text",2)
(1 row)

select session_variable.get('schema_1.my_var[]', null::schema_1.my_type[]);
               get               
---------------------------------
 {"(element1,1)","(element2,2)"}
(1 row)

select session_variable.get('initially null', null::schema_1.my_type);
 get 
-----
 
(1 row)

select session_variable.get('schema_1.my_domain', null::schema_1.my_domain);
                       get                       
-------------------------------------------------
 {"(\"element 1\",123)","(\"element 2,2\",234)"}
(1 row)

select session_variable.get('int[]', null::int[]);
   get   
---------
 {1,2,3}
(1 row)

select session_variable.get('just_text', null::varchar);
      get       
----------------
 just some text
(1 row)

select session_variable.get('just_int', 15);
 get 
-----
   0
(1 row)

select session_variable.get('just_smallint', null::smallint);
 get 
-----
 123
(1 row)

select session_variable.get('const_boolean', null::boolean);
 get 
-----
 t
(1 row)

select session_variable.get_stable('const_boolean', null::boolean);  
 get_stable 
------------
 t
(1 row)

select session_variable.get_constant('const_boolean', null::boolean);  
 get_constant 
--------------
 t
(1 row)

select session_variable.get_constant('just_smallint', null::smallint);        -- should fail just_smallint is not a constant
ERROR:  'just_smallint' is not a constant
select variable_name, initial_value from session_variable.variables order by variable_name;
   variable_name    |                  initial_value                  
--------------------+-------------------------------------------------
 const_boolean      | t
 initially null     | 
 int[]              | {{1,2},{3,4},{5,5}}
 just_int           | 0
 just_smallint      | 123
 just_text          | just some text
 schema_1.my_domain | {"(\"element 1\",123)","(\"element 2,2\",234)"}
 schema_1.my_var    | ("some text",2)
 schema_1.my_var[]  | {"(element1,1)","(element2,2)"}
(9 rows)

select session_variable.dump();
                                                                                   dump                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 truncate table session_variable.variables;
 select session_variable.init();
 select session_variable.create_constant('const_boolean', 'pg_catalog.bool'::regtype, 't'::pg_catalog.bool);
 select session_variable.create_variable('initially null', 'schema_1.my_type'::regtype, NULL::schema_1.my_type);
 select session_variable.create_variable('int[]', 'pg_catalog.int4[]'::regtype, '{{1,2},{3,4},{5,5}}'::pg_catalog.int4[]);
 select session_variable.create_variable('just_int', 'pg_catalog.int4'::regtype, '0'::pg_catalog.int4);
 select session_variable.create_variable('just_smallint', 'pg_catalog.int2'::regtype, '123'::pg_catalog.int2);
 select session_variable.create_variable('just_text', 'pg_catalog.text'::regtype, 'just some text'::pg_catalog.text);
 select session_variable.create_variable('schema_1.my_domain', 'schema_1.my_domain'::regtype, E'{"(\\"element 1\\",123)","(\\"element 2,2\\",234)"}'::schema_1.my_domain);
 select session_variable.create_variable('schema_1.my_var', 'schema_1.my_type'::regtype, '("some text",2)'::schema_1.my_type);
 select session_variable.create_variable('schema_1.my_var[]', 'schema_1.my_type[]'::regtype, '{"(element1,1)","(element2,2)"}'::schema_1.my_type[]);
(11 rows)

select session_variable.set('int[]', array[1,2,3]);
 set 
-----
 t
(1 row)

-- cleanup
drop schema if exists session_variable cascade;
NOTICE:  drop cascades to extension session_variable
drop schema if exists schema_1 cascade;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to type schema_1.my_type
drop cascades to type schema_1.my_domain
